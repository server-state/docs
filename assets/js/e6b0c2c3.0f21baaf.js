"use strict";(self.webpackChunk_server_state_docs=self.webpackChunk_server_state_docs||[]).push([[773],{5563:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return d},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return m},default:function(){return c}});var s=t(7462),r=t(3366),n=(t(7294),t(3905)),i=t(8168),l=["components"],d={title:"Redis-based User Database Structure",description:"Overview of how we use the Redis key-value storage to store user data."},o=void 0,u={unversionedId:"references/redis-user-database",id:"references/redis-user-database",isDocsHomePage:!1,title:"Redis-based User Database Structure",description:"Overview of how we use the Redis key-value storage to store user data.",source:"@site/internal/references/redis-user-database.mdx",sourceDirName:"references",slug:"/references/redis-user-database",permalink:"/internal/references/redis-user-database",editUrl:"https://github.com/server-state/docs/edit/main/internal/references/redis-user-database.mdx",tags:[],version:"current",lastUpdatedBy:"Pablo Klaschka",lastUpdatedAt:1632358600,formattedLastUpdatedAt:"9/23/2021",frontMatter:{title:"Redis-based User Database Structure",description:"Overview of how we use the Redis key-value storage to store user data."},sidebar:"sidebar",previous:{title:"Maintainer's Tasks",permalink:"/internal/references/maintainers-tasks"}},m=[{value:"See also",id:"see-also",children:[]}],p={toc:m};function c(e){var a=e.components,t=(0,r.Z)(e,l);return(0,n.kt)("wrapper",(0,s.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"We use a simple set of key-value pairs to store any individual user."),(0,n.kt)("p",null,"Any user has"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"an id"),(0,n.kt)("li",{parentName:"ul"},"an email address"),(0,n.kt)("li",{parentName:"ul"},"a role (either ",(0,n.kt)("inlineCode",{parentName:"li"},"'user'")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"'admin'"),")"),(0,n.kt)("li",{parentName:"ul"},"a password (saved as a hash)")),(0,n.kt)("p",null,"ID, email and role are accessible under ",(0,n.kt)("inlineCode",{parentName:"p"},"_USERS/[id]/*"),' and the id can be\n"reverse looked up" based on the email via ',(0,n.kt)("inlineCode",{parentName:"p"},"_USER_EMAILS/[email]"),":"),(0,n.kt)(i.Ee,{src:"/static/img/drawio-diagrams/internal/redis-user-db-structure.drawio.svg",invertible:!0,mdxType:"Image"}),(0,n.kt)("p",null,"This way, it's possible to perform all CRUD user operations with four Redis\ncommands:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"SET [key] [value]")," - set or add some values"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"GET [key]")," - get some values"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"DEL [key]")," - delete values"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"KEYS [pattern]")," - lookup all keys that match the ",(0,n.kt)("inlineCode",{parentName:"li"},"[pattern]"))),(0,n.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,n.kt)("div",{parentName:"div",className:"admonition-heading"},(0,n.kt)("h5",{parentName:"div"},(0,n.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,n.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"List of users")),(0,n.kt)("div",{parentName:"div",className:"admonition-content"},(0,n.kt)("p",{parentName:"div"},"The only thing that may seem difficult with this key-value based storage, at\nfirst, is listing all users. But we can easily achieve this using the ",(0,n.kt)("inlineCode",{parentName:"p"},"KEYS"),"\ncommand:"),(0,n.kt)("pre",{parentName:"div"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"const raw = await references.redisConn.client.KEYS('_USERS/*/email');\n\nconst userIds = raw.map(s => s.split('/')[1]);\n")))),(0,n.kt)("h2",{id:"see-also"},"See also"))}c.isMDXComponent=!0}}]);