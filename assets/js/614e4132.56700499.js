"use strict";(self.webpackChunktelestion_docs=self.webpackChunktelestion_docs||[]).push([[419],{3399:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var o=t(7462),r=t(3366),a=(t(7294),t(3905)),s=(t(8168),["components"]),i={title:"lerna",description:"A CLI to manage monorepo structures of JS-based projects"},c="lerna",l={unversionedId:"internal/concepts/lerna",id:"internal/concepts/lerna",isDocsHomePage:!1,title:"lerna",description:"A CLI to manage monorepo structures of JS-based projects",source:"@site/docs/internal/concepts/lerna.mdx",sourceDirName:"internal/concepts",slug:"/internal/concepts/lerna",permalink:"/telestion-docs/internal/concepts/lerna",editUrl:"https://github.com/wuespace/telestion-docs/edit/main/docs/internal/concepts/lerna.mdx",version:"current",frontMatter:{title:"lerna",description:"A CLI to manage monorepo structures of JS-based projects"},sidebar:"tutorialSidebar",previous:{title:"Conventional Commits",permalink:"/telestion-docs/internal/concepts/conventional-commits"},next:{title:"Branch Naming Guidelines",permalink:"/telestion-docs/internal/references/branch-names"}},p=[],u={toc:p};function d(e){var n=e.components,t=(0,r.Z)(e,s);return(0,a.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"lerna"},(0,a.kt)("inlineCode",{parentName:"h1"},"lerna")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"lerna")," is a CLI to manage monorepo structures of JS-based projects."),(0,a.kt)("p",null,"It provides the capability to bump versions based on conventional commit\nmessages correctly, update cross-dependencies of the different packages and\npublish all packages to npm while simultaneously creating a release on GitHub\nand updating the ",(0,a.kt)("inlineCode",{parentName:"p"},"CHANGELOG.md"),"."))}d.isMDXComponent=!0}}]);