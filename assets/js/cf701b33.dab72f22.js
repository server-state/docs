"use strict";(self.webpackChunk_server_state_docs=self.webpackChunk_server_state_docs||[]).push([[576],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,f=u["".concat(c,".").concat(d)]||u[d]||p[d]||o;return n?a.createElement(f,i(i({ref:t},m),{},{components:n})):a.createElement(f,i({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3619:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return c},metadata:function(){return m},toc:function(){return u}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=n(4966),l=["components"],c={title:"Conventional Commits",description:"REPLACE_WITH_DESCRIPTION"},s=void 0,m={unversionedId:"concepts/conventional-commits",id:"concepts/conventional-commits",title:"Conventional Commits",description:"REPLACE_WITH_DESCRIPTION",source:"@site/internal/concepts/conventional-commits.mdx",sourceDirName:"concepts",slug:"/concepts/conventional-commits",permalink:"/internal/concepts/conventional-commits",draft:!1,editUrl:"https://github.com/server-state/docs/edit/main/internal/concepts/conventional-commits.mdx",tags:[],version:"current",lastUpdatedBy:"Pablo Klaschka",lastUpdatedAt:1629322272,formattedLastUpdatedAt:"8/18/2021",frontMatter:{title:"Conventional Commits",description:"REPLACE_WITH_DESCRIPTION"},sidebar:"sidebar",previous:{title:"Intro",permalink:"/internal/"},next:{title:"lerna",permalink:"/internal/concepts/lerna"}},p={},u=[{value:"Examples",id:"examples",level:2},{value:"See also",id:"see-also",level:2}],d={toc:u};function f(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Conventional commits are a method of writing git commit messages in a\nstandardized format that also enables automatic determination of the next\nrelease type in a semantic versioning system."),(0,o.kt)("p",null,"Conventional commits consist of a few primary elements:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"type"),": The type of the commit. The type can be one of a pre-configured number\nof elements, including (in this project) ",(0,o.kt)("inlineCode",{parentName:"li"},"feat")," for features, ",(0,o.kt)("inlineCode",{parentName:"li"},"fix")," for bug\nfixes, ",(0,o.kt)("inlineCode",{parentName:"li"},"docs")," for documentation updates, ",(0,o.kt)("inlineCode",{parentName:"li"},"chore")," for meta-stuff in the repo\n(not updating the packages), and some more."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"scope")," (optional): The scope of the change, for example, the package name or\nsomething like ",(0,o.kt)("inlineCode",{parentName:"li"},"ci")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"description"),": a one-liner description of the type (feature, bug fix, or\nsomething else)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"body")," (optional): more detailed descriptions"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"footer")," (optional): key-value-pairs of extra meta information, for example,\nfixed GitHub issues")),(0,o.kt)("p",null,"All in all, the structure looks something like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"<type>[(optional scope)][!]: <description>\n\n[optional body]\n\n[optional footers]\n")),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("p",null,"Since this doesn't look too intuitive, here are a few examples of actual commit\nmessages:"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Example: A commit message for a bug fix introducing breaking changes")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre"},"fix!: Fixed parameter conversion in `updateParents()`\n\nBefore, it automatically converted strings to numbers in such a\nway that non-number inputs also got allowed. This is now changed.\n\nFixes: #8\nBREAKING CHANGE: Non-number inputs no lead to `updateParents()` to\nthrow\n")))),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Example: A commit message for a feature in the package pkg-1")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre"},"feat(pkg-1): Constructor for JSON parameter\n\nadded constructor for a JSON string as the single parameter\nto `PackageOneClass`\n\nFixes: #22\nCo-Authored-By: Pablo Klaschka <contact@pabloklaschka.de>\n")))),(0,o.kt)("h2",{id:"see-also"},"See also"),(0,o.kt)(i.s3,{to:"../references/conventional-commit-types",mdxType:"Reference"},"Commit Types Reference"),(0,o.kt)(i.s3,{to:"https://www.conventionalcommits.org/en/v1.0.0/",mdxType:"Reference"},"Conventional Commits Website/Specification"))}f.isMDXComponent=!0},4966:function(e,t,n){n.d(t,{kN:function(){return c},rj:function(){return r},Ee:function(){return d},s3:function(){return i}});var a=n(7294);function r(e){var t=e.cols,n=void 0===t?2:t,r=e.children;return a.createElement("div",{style:{display:"grid",gridTemplateColumns:"repeat("+n+", 1fr)",columnGap:"1em"}},r)}var o=n(9960);function i(e){var t=e.children,n=e.to,r=n.endsWith(".mdx")?n.substr(0,n.length-4):n;return a.createElement(o.Z,{to:r,className:"block-link"},a.createElement("span",null,t," \xbb"),a.createElement("span",null,r))}var l=function(){return a.createElement("svg",{width:"1em",height:"1em",viewBox:"0 0 24 24"},a.createElement("defs",null,a.createElement("style",null,".a{clip-path:url(#b);}"),a.createElement("clipPath",{id:"b"},a.createElement("rect",{width:24,height:24}))),a.createElement("g",{id:"a",className:"a"},a.createElement("path",{fill:"currentColor",d:"M4,20a4,4,0,0,1-4-4V12a2,2,0,0,1,2-2v6a2,2,0,0,0,2,2H16a2,2,0,0,0,2-2V10a2,2,0,0,1,2,2v4a4,4,0,0,1-4,4Zm5.389-6.208-.02-.015h0l-.02-.016c-.02-.016-.038-.034-.057-.052L3.636,8.05A1,1,0,1,1,5.05,6.636L9,10.587V1a1,1,0,0,1,2,0v9.586l3.949-3.95A1,1,0,0,1,16.364,8.05l-5.639,5.638a1,1,0,0,1-1.336.1Z",transform:"translate(2 2)"})))};function c(e){var t=e.children,n=e.file,r=n.startsWith("/static")?n.substr(7):n;return a.createElement("a",{className:"block-link",download:!0,href:r},a.createElement("span",null,a.createElement(l,null)," ",t))}var s=n(7462),m=n(3366),p=n(4996),u=["src","invertible","alt"];function d(e){var t=e.src,n=e.invertible,r=void 0!==n&&n,i=e.alt,l=void 0===i?"":i,c=(0,m.Z)(e,u),d=t.startsWith("/static")?t.substr(7):t,f=(0,p.Z)(d);return a.createElement(a.Fragment,null,a.createElement(o.Z,{to:d,style:{display:"none"}},"Link to ",l),a.createElement("img",(0,s.Z)({src:f,className:r?"invertible":"",alt:l},c)))}}}]);