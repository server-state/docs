"use strict";(self.webpackChunk_server_state_docs=self.webpackChunk_server_state_docs||[]).push([[954],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),h=a,d=u["".concat(l,".").concat(h)]||u[h]||m[h]||i;return n?r.createElement(d,o(o({ref:t},p),{},{components:n})):r.createElement(d,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},878:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905)),i=n(4966);const o={title:"Key Git Principles",description:"Critical principles for contributing to and maintaining the Server State repositories"},s=void 0,l={unversionedId:"references/key-git-principles",id:"references/key-git-principles",title:"Key Git Principles",description:"Critical principles for contributing to and maintaining the Server State repositories",source:"@site/internal/references/key-git-principles.mdx",sourceDirName:"references",slug:"/references/key-git-principles",permalink:"/internal/references/key-git-principles",draft:!1,editUrl:"https://github.com/server-state/docs/edit/main/internal/references/key-git-principles.mdx",tags:[],version:"current",lastUpdatedBy:"pklaschka",lastUpdatedAt:1629328212,formattedLastUpdatedAt:"Aug 18, 2021",frontMatter:{title:"Key Git Principles",description:"Critical principles for contributing to and maintaining the Server State repositories"},sidebar:"sidebar",previous:{title:"Conventional Commit Types",permalink:"/internal/references/conventional-commit-types"},next:{title:"Maintainer's Tasks",permalink:"/internal/references/maintainers-tasks"}},c={},p=[{value:"Be kind!",id:"be-kind",level:2},{value:"Keep <code>main</code> instantly releasable",id:"keep-main-instantly-releasable",level:2},{value:"One branch per change",id:"one-branch-per-change",level:2},{value:"Use the conventional commit commit-name system",id:"use-the-conventional-commit-commit-name-system",level:2},{value:"Don&#39;t be afraid to ask",id:"dont-be-afraid-to-ask",level:2}],m={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This document provides an overview of the fundamental principles we follow\nwithin our GitHub repositories."),(0,a.kt)("h2",{id:"be-kind"},"Be kind!"),(0,a.kt)("p",null,"Yes, it sounds silly, but it's probably the most important principle of them\nall. Open-Source contributions are, in 99 % of the cases, side-projects.\nOpen-Source is an excellent principle, and you can be proud to contribute to the\npool of open-source software. Don't use comments like \"RTFM!\" in this community."),(0,a.kt)("p",null,'Contributing to an open-source project is scary enough already: Your code is\navailable for the world to see (and judge). But you do need and should\nappreciate these contributions. Therefore, if the best you can do is post some\ndiscouraging comment about why something is "just bad", keep it to yourself!'),(0,a.kt)("p",null,"Constructive criticism is appreciated, but you should always combine it with\nexplicit appreciation for the time the other person has taken."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Online comments often get misinterpreted in the worst possible way (as it is,\nunfortunately, also the safest way for the person receiving them).\nUnfortunately, misunderstandings happen far sooner than you might think,\nespecially when they begin to cross cultures and languages. So please keep that\nin mind when writing comments.")),(0,a.kt)("h2",{id:"keep-main-instantly-releasable"},"Keep ",(0,a.kt)("inlineCode",{parentName:"h2"},"main")," instantly releasable"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Always")," keep the state of the main branch releasable. As this project\nimplements automation in such a way that pre-configured tools automatically\nrelease the correct kind of semantic release on the press of a button (which,\ntheoretically, anyone should be able to press). Pressing that button should\nresult in a good release whenever it gets pressed."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Keeping ",(0,a.kt)("inlineCode",{parentName:"p"},"main")," instantly releasable enables this project to release changes in\nno time, if needed or wanted")),(0,a.kt)("h2",{id:"one-branch-per-change"},"One branch per change"),(0,a.kt)("p",null,"Don't try to put more than one kind of change (bug fix, feature, or anything\nelse) into a single branch, except if explicitly advised to do so by one of the\nmaintainers. Having one branch per change ensures the ability to correctly merge\nit with a conventional commit message, should the need arise, and guarantees\ncorrect generation of release notes and changelog in releases."),(0,a.kt)("h2",{id:"use-the-conventional-commit-commit-name-system"},"Use the conventional commit commit-name system"),(0,a.kt)("p",null,"The conventional commit system lets this project generate release notes and the\nrequired semantic type of release at the push of a button without having to\nthink about it (sticking with the instantly releasable theme)."),(0,a.kt)("p",null,'So don\'t worry if you might do something wrong. Even the "worst" of mistakes a\nmaintainer can fix. Either when merging your Pull Request (by squashing the\ncommits with a new commit message) or another way.'),(0,a.kt)(i.s3,{to:"./conventional-commit-types",mdxType:"Reference"},"Choose the correct conventional commit type"),(0,a.kt)("h2",{id:"dont-be-afraid-to-ask"},"Don't be afraid to ask"),(0,a.kt)("p",null,"While everyone claims that JavaScript and Java are easy compared to other\nlanguages (that may or may not be the case), what this project uses is a rather\ncomplex and a large ecosystem with plenty of tooling."),(0,a.kt)("p",null,"While, at its core, it's still \"easy old JS or Java,\" a lot might not be\napparent immediately. So always feel free to ask about anything. If someone\nisn't kind in their response, they don't belong into this project, and in 99 %\nof the cases, you'll get a kind reply from someone else."),(0,a.kt)("p",null,"Remember: You're not the first to feel this way (and even the most experienced\nof developers sometimes have to ask someone else to find out they've forgotten\nto hit ",(0,a.kt)("strong",{parentName:"p"},"Compile")," \ud83d\ude09)"))}u.isMDXComponent=!0},4966:(e,t,n)=>{n.d(t,{kN:()=>l,rj:()=>a,Ee:()=>m,s3:()=>o});var r=n(7294);function a(e){let{cols:t=2,children:n}=e;return r.createElement("div",{style:{display:"grid",gridTemplateColumns:`repeat(${t}, 1fr)`,columnGap:"1em"}},n)}var i=n(9960);function o(e){let{children:t,to:n}=e;const a=n.endsWith(".mdx")?n.substr(0,n.length-4):n;return r.createElement(i.Z,{to:a,className:"block-link"},r.createElement("span",null,t," \xbb"),r.createElement("span",null,a))}const s=()=>r.createElement("svg",{width:"1em",height:"1em",viewBox:"0 0 24 24"},r.createElement("defs",null,r.createElement("style",null,".a{clip-path:url(#b);}"),r.createElement("clipPath",{id:"b"},r.createElement("rect",{width:24,height:24}))),r.createElement("g",{id:"a",className:"a"},r.createElement("path",{fill:"currentColor",d:"M4,20a4,4,0,0,1-4-4V12a2,2,0,0,1,2-2v6a2,2,0,0,0,2,2H16a2,2,0,0,0,2-2V10a2,2,0,0,1,2,2v4a4,4,0,0,1-4,4Zm5.389-6.208-.02-.015h0l-.02-.016c-.02-.016-.038-.034-.057-.052L3.636,8.05A1,1,0,1,1,5.05,6.636L9,10.587V1a1,1,0,0,1,2,0v9.586l3.949-3.95A1,1,0,0,1,16.364,8.05l-5.639,5.638a1,1,0,0,1-1.336.1Z",transform:"translate(2 2)"})));function l(e){let{children:t,file:n}=e;const a=n.startsWith("/static")?n.substr(7):n;return r.createElement("a",{className:"block-link",download:!0,href:a},r.createElement("span",null,r.createElement(s,null)," ",t))}var c=n(7462),p=n(4996);function m(e){let{src:t,invertible:n=!1,alt:a="",...o}=e;const s=t.startsWith("/static")?t.substr(7):t,l=(0,p.Z)(s);return r.createElement(r.Fragment,null,r.createElement(i.Z,{to:s,style:{display:"none"}},"Link to ",a),r.createElement("img",(0,c.Z)({src:l,className:n?"invertible":"",alt:a},o)))}}}]);